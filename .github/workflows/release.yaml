name: release

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created:  ${{ steps.release.outputs.releases_created }}
      packages:  ${{ steps.get-released-packages.outputs.result }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          monorepo-tags: true
      - run: echo '${{toJSON(steps.release.outputs)}}'
      - id: get-released-packages
        uses: actions/github-script@v6
        with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              const outputs = ${{ steps.release.outputs }};
              return Object.keys(outputs.releases).map((key) => {
                const match = key.match(/^(.*\/.*)--release_created$/)
                if (!match || !value) return;
                return match[1];
              }).filter(Boolean);
  
  npm-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install
      # - run: yarn publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
